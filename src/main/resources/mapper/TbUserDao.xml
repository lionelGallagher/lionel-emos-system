<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emos.wx.db.dao.TbUserDao">
    <select id="searchMemberEmail" parameterType="int" resultType="String">
        SELECT email FROM tb_user WHERE id=#{id} AND status = 1
    </select>

    <select id="selectUserPhotoAndName" parameterType="list" resultType="hashmap">
        select id, name, photo
        from tb_user
        where status = 1 and id in
        <foreach collection="list" close=")" open="(" item="one">
            #{one}
        </foreach>

    </select>
    <select id="searchUserInfo" parameterType="int" resultType="HashMap">
        SELECT u.open_id                                        AS openId,
               u.nickname,
               u.name,
               u.photo,
               u.sex,
               u.tel,
               u.email,
               d.dept_name                                      AS dept,
               u.hiredate,
               CASE u.status
                   WHEN 1 THEN "在职"
                   WHEN 2 THEN "离职"
                   END                                          AS status,
               (SELECT GROUP_CONCAT(role_name separator "，")
                FROM tb_role
                WHERE JSON_CONTAINS(u.role, CONVERT(id, CHAR))) AS roles
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>
    <!--查询所属该部门经理的id-->
    <select id="searchDeptManagerId" parameterType="int" resultType="int">
        SELECT u2.id
        FROM tb_user u1
                 JOIN tb_user u2 ON u1.dept_id = u2.dept_id
                 JOIN tb_role r ON JSON_CONTAINS(u2.role, CAST(r.id AS CHAR))
        WHERE u1.id = #{id}
          AND r.id = 2
          AND u1.status = 1
          AND u2.status = 1
    </select>
    <!--查询总经理的id-->
    <select id="searchGmId" resultType="int">
        SELECT u.id
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        WHERE r.id = 1
          AND u.status = 1
    </select>


    <select id="searchUserGroupByDept" parameterType="String" resultType="HashMap">
        SELECT
        d.id AS deptId,
        d.dept_name AS deptName,
        u.id AS userId,
        u.name
        FROM tb_dept d JOIN tb_user u ON u.dept_id=d.id
        WHERE u.status=1
        <if test="keyword!=null">
            AND u.name LIKE '%${keyword}%'
        </if>
        ORDER BY d.id, u.id;
    </select>

    <select id="searchMembers" parameterType="list" resultType="HashMap">
        select id,name,photo
        from tb_user
        where status=1 and id in
        <foreach collection="list" item="one" separator="," open="(" close=")">
            #{one}
        </foreach>
    </select>
    <select id="searchUserSummary" resultType="hashmap" parameterType="int">
        select u.name, u.photo, td.dept_name as deptName
        from tb_user u
                 left join tb_dept td on u.dept_id = td.id
        where u.id = #{userId}
          and status = 1
    </select>
    <select id="searchUserHiredate" resultType="string" parameterType="int">
        select hiredate
        from tb_user
        where id = #{userId}
          and status = 1
    </select>
    <select id="searchNameAndDept" parameterType="int" resultType="hashmap">
        SELECT u.name, d.dept_name
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

    <select id="haveRootUser" resultType="boolean">
        select if(count(*), true, false)
        from tb_user
        where root = 1;
    </select>
    <select id="searchUserPermissions" parameterType="int" resultType="string">
        select p.permission_name
        from tb_user u
                 join tb_role r on json_contains(u.role, cast(r.id as char))
                 join tb_permission p on json_contains(r.permissions, cast(p.id as char))
        where u.id = #{userId}
          and u.status = 1;
    </select>
    <select id="searchById" parameterType="int" resultType="com.example.emos.wx.db.pojo.TbUser">
        SELECT id,
               open_id,
               nickname,
               photo,
               name,
               sex,
               tel,
               role,
               root,
               dept_id,
               status,
               create_time
        FROM tb_user
        WHERE id = #{userId}
          AND status = 1
    </select>

    <insert id="insert" parameterType="HashMap">
        INSERT INTO tb_user
        SET
        <if test="openId!=null">
            open_id = #{openId},
        </if>
        <if test="nickname!=null">
            nickname = #{nickname},
        </if>
        <if test="photo!=null">
            photo = #{photo},
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email=#{email},
        </if>
        <if test="hiredate!=null">
            hiredate = #{hiredate},
        </if>
        role = #{role},
        root = #{root},
        <if test="deptName!=null">
            dept_id = ( SELECT id FROM tb_dept WHERE dept_name = #{deptName} ),
        </if>
        status = #{status},
        create_time = #{createTime}
    </insert>
    <select id="searchIdByOpenId" parameterType="String" resultType="Integer">
        SELECT id
        FROM tb_user
        WHERE open_id = #{openId}
          AND status = 1
    </select>

</mapper>